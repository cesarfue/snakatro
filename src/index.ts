import { app, BrowserWindow, screen, ipcMain, desktopCapturer } from "electron";
import * as path from "path";

// Handle creating/removing shortcuts on Windows when installing/uninstalling
if (require("electron-squirrel-startup")) {
  app.quit();
}

// This allows TypeScript to pick up the magic constants that's auto-generated by Forge's Webpack
// plugin that tells the Electron app where to look for the Webpack-bundled app code
declare const MAIN_WINDOW_WEBPACK_ENTRY: string;
declare const MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY: string;

let mainWindow: BrowserWindow | null = null;

async function getScreenSource() {
  try {
    const sources = await desktopCapturer.getSources({
      types: ["window"],
      thumbnailSize: { width: 0, height: 0 }, // Don't need thumbnails
    });
    const previousWindow = sources[1]; // Skip our own window (index 0)
    if (!previousWindow) {
      throw new Error("No previous window found");
    }
    return previousWindow.id;
  } catch (err) {
    console.error("Failed to get window source:", err);
    throw err;
  }
}

function createWindow(): void {
  // Get screen dimensions from primary display
  const { width, height } = screen.getPrimaryDisplay().workAreaSize;

  // Create the browser window.
  mainWindow = new BrowserWindow({
    width: width,
    height: height,
    resizable: true,
    transparent: false,
    frame: false,
    webPreferences: {
      nodeIntegration: false,
      contextIsolation: true,
      preload: MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY,
    },
  });

  // Load the entry point from Webpack
  mainWindow.loadURL(MAIN_WINDOW_WEBPACK_ENTRY);

  // Uncomment to enable DevTools
  // mainWindow.webContents.openDevTools();

  mainWindow.on("closed", () => {
    mainWindow = null;
  });
}

// Set up IPC handler for screen capture
ipcMain.handle("get-screen-source", async () => {
  try {
    const sourceId = await getScreenSource();
    return sourceId;
  } catch (err) {
    console.error("Failed to get window source:", err);
    throw err;
  }
});

// This method will be called when Electron has finished initialization
app.whenReady().then(createWindow);

// Quit when all windows are closed, except on macOS
app.on("window-all-closed", () => {
  if (process.platform !== "darwin") {
    app.quit();
  }
});

app.on("activate", () => {
  // On macOS it's common to re-create a window when the dock icon is clicked and there are no other windows open
  if (BrowserWindow.getAllWindows().length === 0) {
    createWindow();
  }
});

// Additional main process code can be added here or imported from separate files
